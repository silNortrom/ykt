<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ykt.backstage.dao.FeedbackRecordsMapper">
    <cache type="com.ykt.backstage.common.config.MybatisRedisCache">
        <property name="eviction" value="LRU"/>
        <property name="flushInterval" value="6000000"/>
        <property name="size" value="1024"/>
        <property name="readOnly" value="false"/>
    </cache>
    <resultMap id="BaseResultMap" type="com.ykt.backstage.entity.FeedbackRecords">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="attendance_warnings_id" jdbcType="INTEGER" property="attendanceWarningsId"/>
        <result column="feedback_time" jdbcType="TIMESTAMP" property="feedbackTime"/>
        <result column="created_by" jdbcType="VARCHAR" property="createdBy"/>
        <result column="created_user_id" jdbcType="VARCHAR" property="createdUserId"/>
        <result column="created_at" jdbcType="TIMESTAMP" property="createdAt"/>
        <result column="description" jdbcType="LONGVARCHAR" property="description"/>
        <result column="type" jdbcType="VARCHAR" property="type"/>
    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from feedback_records
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.ykt.backstage.entity.FeedbackRecords">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into feedback_records (attendance_warnings_id, feedback_time,
        created_by, created_user_id, created_at,
        description,type)
        values (#{attendanceWarningsId,jdbcType=INTEGER}, #{feedbackTime,jdbcType=TIMESTAMP},
        #{createdBy,jdbcType=VARCHAR}, #{createdUserId,jdbcType=VARCHAR}, #{createdAt,jdbcType=TIMESTAMP},
        #{description,jdbcType=LONGVARCHAR},#{type,jdbcType=VARCHAR})
    </insert>
    <update id="updateByPrimaryKey" parameterType="com.ykt.backstage.entity.FeedbackRecords">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update feedback_records
        set attendance_warnings_id = #{attendanceWarningsId,jdbcType=INTEGER},
        feedback_time = #{feedbackTime,jdbcType=TIMESTAMP},
        created_by = #{createdBy,jdbcType=VARCHAR},
        created_user_id = #{createdUserId,jdbcType=VARCHAR},
        created_at = #{createdAt,jdbcType=TIMESTAMP},
        description = #{description,jdbcType=LONGVARCHAR},
        type =#{type,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select id, attendance_warnings_id, feedback_time, created_by, created_user_id, created_at,
        description,type
        from feedback_records
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="selectAll" resultMap="BaseResultMap">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select id, attendance_warnings_id, feedback_time, created_by, created_user_id, created_at,
        description,type
        from feedback_records
    </select>

    <!-- 分页查询 -->
    <select id="pageQuery" resultMap="BaseResultMap">
        select *
        from feedback_records
        <bind name="offset" value="(query.pn-1)*query.ps"></bind>
        limit #{offset},#{query.ps}
    </select>
</mapper>