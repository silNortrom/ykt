<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ykt.backstage.dao.ApplyRecordsMapper">
    <cache type="com.ykt.backstage.common.config.MybatisRedisCache">
        <property name="eviction" value="LRU"/>
        <property name="flushInterval" value="6000000"/>
        <property name="size" value="1024"/>
        <property name="readOnly" value="false"/>
    </cache>
    <resultMap id="BaseResultMap" type="com.ykt.backstage.entity.ApplyRecords">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->


        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="sno" jdbcType="VARCHAR" property="sno"/>
        <result column="card" jdbcType="VARCHAR" property="card"/>
        <result column="site_id" jdbcType="VARCHAR" property="siteId"/>
        <result column="apply_time" jdbcType="TIMESTAMP" property="applyTime"/>
        <result column="administrator_id" jdbcType="VARCHAR" property="administratorId"/>
        <result column="handle_time" jdbcType="TIMESTAMP" property="handleTime"/>
        <result column="handle_status" jdbcType="CHAR" property="handleStatus"/>
        <result column="description" jdbcType="LONGVARCHAR" property="description"/>
    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from apply_records
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.ykt.backstage.entity.ApplyRecords">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into apply_records (sno, card, site_id,
        apply_time, administrator_id, handle_time,
        handle_status, description)
        values (#{sno,jdbcType=VARCHAR}, #{card,jdbcType=VARCHAR}, #{siteId,jdbcType=VARCHAR},
        #{applyTime,jdbcType=TIMESTAMP}, #{administratorId,jdbcType=VARCHAR}, #{handleTime,jdbcType=TIMESTAMP},
        #{handleStatus,jdbcType=CHAR}, #{description,jdbcType=LONGVARCHAR})
    </insert>
    <update id="updateByPrimaryKey" parameterType="com.ykt.backstage.entity.ApplyRecords">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update apply_records
        set sno = #{sno,jdbcType=VARCHAR},
        card = #{card,jdbcType=VARCHAR},
        site_id = #{siteId,jdbcType=VARCHAR},
        apply_time = #{applyTime,jdbcType=TIMESTAMP},
        administrator_id = #{administratorId,jdbcType=VARCHAR},
        handle_time = #{handleTime,jdbcType=TIMESTAMP},
        handle_status = #{handleStatus,jdbcType=CHAR},
        description = #{description,jdbcType=LONGVARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select id, sno, card, site_id, apply_time, administrator_id, handle_time, handle_status,
        description
        from apply_records
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="selectAll" resultMap="BaseResultMap">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select id, sno, card, site_id, apply_time, administrator_id, handle_time, handle_status,
        description
        from apply_records
    </select>

    <!-- 分页查询 -->
    <select id="pageQuery" resultMap="BaseResultMap">
        select id, sno, card, site_id, apply_time, administrator_id, handle_time, handle_status,
        description
        from apply_records
        <bind name="offset" value="(query.pn-1)*query.ps"></bind>
        ORDER by apply_records.apply_time DESC
        limit #{offset},#{query.ps}
    </select>

    <select id="selectcdgl" resultType="com.ykt.backstage.VO.CdglVo">
        select site_name as cdmc,location as cdwz,xm as sqrxm,sno as sqrxh,apply_time as sqsj,description as
        sqyy,handle_status as shzt,handle_time as shsj
        from site a
        left join
        apply_records b on a.site_code=b.site_id
        left join students c on b.sno=c.xh

    </select>
</mapper>